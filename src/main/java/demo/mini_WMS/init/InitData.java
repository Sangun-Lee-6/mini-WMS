package demo.mini_WMS.init;
import demo.mini_WMS.domain.Product;
import demo.mini_WMS.domain.Warehouse;
import demo.mini_WMS.domain.WarehouseLocation;
import demo.mini_WMS.repository.ProductRepository;
import demo.mini_WMS.repository.WarehouseLocationRepository;
import demo.mini_WMS.repository.WarehouseRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

@Component
@RequiredArgsConstructor
public class InitData implements CommandLineRunner {

    private final WarehouseRepository warehouseRepo;
    private final ProductRepository productRepo;
    private final WarehouseLocationRepository locationRepo;

    @Override
    @Transactional
    public void run(String... args) throws Exception {
        // Ï∞ΩÍ≥† ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
        if (warehouseRepo.findAll().isEmpty()) {
            Warehouse wh = new Warehouse("1Î≤à Ï∞ΩÍ≥†", "ÏÑúÏö∏");
            warehouseRepo.save(wh);

            // ‚úÖ ÏúÑÏπòÎèÑ Ìï®Íªò Ï¥àÍ∏∞Ìôî
            for (int row = 0; row < 5; row++) {
                for (int col = 0; col < 10; col++) {
                    WarehouseLocation loc = WarehouseLocation.builder()
                            .warehouse(wh)
                            .rowIdx(row)
                            .colIdx(col)
                            .build();
                    locationRepo.save(loc);
                }
            }
        }

        // ÏÉÅÌíàÏù¥ ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
        if (productRepo.findAll().isEmpty()) {
            productRepo.save(new Product("SKU001", "üçéÏÇ¨Í≥º", "Í≥ºÏùº"));
            productRepo.save(new Product("SKU002", "üçåÎ∞îÎÇòÎÇò", "Í≥ºÏùº"));
            productRepo.save(new Product("SKU003", "üçäÏò§Î†åÏßÄ", "Í≥ºÏùº"));
            productRepo.save(new Product("SKU004", "ü•¶Î∏åÎ°úÏΩúÎ¶¨", "Ï±ÑÏÜå"));
            productRepo.save(new Product("SKU005", "ü•öÍ≥ÑÎûÄ", "Ïú†Ï†úÌíà"));
        }
    }
}
